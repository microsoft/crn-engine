# Release pipeline

pool:
  vmImage: 'windows-2019'
  demands:
  - msbuild
  - visualstudio

  timeoutInMinutes: 300

variables:
  BuildPlatform: 'x64'
  BuildConfiguration: 'release'

steps:
- script: 'dotnet tool restore'
  displayName: 'dotnet tool restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.sln'

- task: VSBuild@1
  displayName: 'Build CRNEngine/CRNEngineCli.sln'
  inputs:
    solution: CRNEngine/CRNEngineCli.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build CRNEngine/CRNEngineServer.sln'
  inputs:
    solution: CRNEngine/CRNEngineServer.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build CRNEngine/CRNEngineHTML.sln'
  inputs:
    solution: CRNEngine/CRNEngineHTML.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build ClassicGEC/ClassicGECCli.sln'
  inputs:
    solution: ClassicGEC/ClassicGECCli.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build ClassicGEC/ClassicGECServer.sln'
  inputs:
    solution: ClassicGEC/ClassicGECServer.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build ClassicGEC/ClassicGECHTML.sln'
  inputs:
    solution: ClassicGEC/ClassicGECHTML.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build ClassicDSD/ClassicDSD.sln'
  inputs:
    solution: ClassicDSD/ClassicDSD.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build ClassicDSD/ClassicDSDServer.sln'
  inputs:
    solution: ClassicDSD/ClassicDSDServer.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSBuild@1
  displayName: 'Build ClassicDSD/ClassicDSDHTML5.sln'
  inputs:
    solution: ClassicDSD/ClassicDSDHTML5.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: BinSkim@4
  inputs:
    InputType: 'Basic'
    Function: 'analyze'
    TargetPattern: 'guardianGlob'
    AnalyzeTargetGlob: '**/netcoreapp3.1/*'

- task: CredScan@3
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))

- task: Semmle@1
  inputs:
    sourceCodeDirectory: '$(Build.SourcesDirectory)'
    language: 'tsandjs'
    includeNodeModules: false
    querySuite: 'Recommended'
    timeout: '1800'
    ram: '16384'
    addProjectDirToScanningExclusionList: true

- task: ComponentGovernanceComponentDetection@0
  condition: succeeded()
  inputs:
    scanType: 'Register'
    verbosity: 'Normal'
    alertWarningLevel: 'High'
    failOnAlert: true
    failOnStderr: true

- task: PostAnalysis@1
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
  displayName: 'Post Analysis'
  inputs:
    BinSkim: true
    CredScan: true
    Semmle: true