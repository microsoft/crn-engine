// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

module Microsoft.Research.GEC.ProgramParserTest

open Microsoft.Research.GEC.Program

open Xunit
open FsUnit.Xunit
open System.Diagnostics

open Parser
open Microsoft.Research.CRNEngine

let basic_program = """//solution 1 Y = araC
directive simulation {final = 100000.0; points = 1000}

prom<neg(Y)>; rbs; pcr<codes(Y)>; ter"""

let basic_crn = """directive simulation {final = 100000.0; points = 1000}
directive crn {
module g2module(val) = {
| val g2
}
| 1 g4
| g2module(2)
}

x1:prom<neg(Y)>; rbs; pcr<codes(Y)>; ter
"""

let repressilator = """directive simulation {final = 100000.0; points = 1000; plots = [A; B; C]}

prom<neg(C)>; rbs; pcr<codes(A)>; ter;
prom<neg(A)>; rbs; pcr<codes(B)>; ter;
prom<neg(B)>; rbs; pcr<codes(C)>; ter"""

let repressilator_similar = """directive simulation {final = 100000.0; points = 1000; plots = [A; B; C]}

prom<con(RtA),neg(C,RbA,RubA,RtbA)>;
rbs<rate(RA)>; pcr<codes(A,RdA)>; ter;
prom<con(RtB),neg(A,RbB,RubB,RtbB)>;
rbs<rate(RB)>; pcr<codes(B,RdB)>; ter;
prom<con(RtC),neg(B,RbC,RubC,RtbC)>;
rbs<rate(RC)>; pcr<codes(C,RdC)>; ter

| 0.4 < RubB | RubB < 0.6 
| 0.4 < RubC | RubC < 0.6 
| 0.4 < RubA | RubA < 0.6 """

let repressilator_modules = """directive simulation {final = 100000.0; points = 1000; plots = [A; B; C]}

template gate(i,o) {
  prom<neg(i)>; rbs; pcr<codes(o)>; ter
};
gate(A,B) | gate(B,C) | gate(C,A)"""

let repressilator_modules_similar = """directive simulation {final = 100000.0; points = 1000; plots = [A; B; C]}

template gate(i,o) {
  new RB. new RUB. new RTB. new RT. new R. new RD.
  prom<con(RT), neg(i, RB, RUB, RTB)>;rbs<rate(R)>; pcr<codes(o,RD)>; ter
  | 0.4 < RUB | RUB < 0.6
};
gate(A,B) | gate(B,C) | gate(C,A)"""

let repressilator_system = """//any solution
directive simulation {final = 100000.0; points = 1000; plots = [AF;B;C]}

template gate(i,o) {
  new RB. new RUB. new RTB. new RT. new R. new RD.
  prom<con(RT), neg(i, RB, RUB, RTB)>;rbs<rate(R)>; pcr<codes(o,RD)>; ter
  | 0.4 < RUB | RUB < 0.6
};

system s1{
  gate(A,B)
}

system s2{
gate(B,C)
}
 
system s3{
gate(C,A)
}
"""

let reciever_device = """directive simulation {final = 100000.0; points = 1000; plots = [Signal]}

cell
[ prom; rbs; pcr<codes(Receiver)>; ter
| prom<pos(Receiver::Signal)>; 
  rbs; pcr<codes(gfp)>; ter
| Receiver + Signal -> Receiver::Signal
| Receiver::Signal -> Receiver + Signal
]
| Signal -> cell[Signal]
| cell[Signal] -> Signal
| initPop Signal 100.0"""

let predator_prey = """directive simulation {final = 100000.0; points = 1000; plots = [predator_ccdB; prey_ccdB]}

predator
[ r0051:prom; rbs; pcr<codes(Q2b)>
; rbs; pcr<codes(Q1a)>; ter
; prom<pos(Q2b::H2)>; rbs; pcr<codes(A)>; ter
; r0051:prom; rbs; pcr<codes(ccdB)>; ter
| Q1a ~-> H1 | Q2b + H2 <-> Q2b::H2
| A ~ ccdB ->
| H1 *->{10.0} | H2 *->{10.0}
| ccdB ~ Q1a *->{10.0}
] ||

prey
[ prom<pos(H1::Q1b)>; rbs; pcr<codes(ccdB)>; ter
; r0051:prom; rbs; pcr<codes(Q1b)>
; rbs; pcr<codes(Q2a)>; ter
| Q2a ~-> H2 | H1 + Q1b <-> H1::Q1b
| H2 *->{10.0} | H1 *->{10.0}
| ccdB ~ Q2a *->{10.0}
] ||

predator[H1] -> H1 | H1 -> prey[H1]
| prey[H2] -> H2 | H2 -> predator[H2]"""

let band_detector = """directive simulation {final = 100000.0; points = 1000; plots = [receiver_gfp]}

receiver
[ runknown5:prom; rbs; pcr<codes(luxR)>; ter
| prom<pos(luxR::Signal)>; rbs; pcr<codes(lacI)>;ter
| prom<pos(luxR::Signal)>; rbs; pcr<codes(cI)>;ter
| prom<neg(cI)>;rbs; pcr<codes(lacI)>;ter
| prom<neg(lacI)>;rbs;pcr<codes(gfp)>;ter
| luxR + Signal -> luxR::Signal
| luxR::Signal -> luxR + Signal
]
| Signal -> receiver[Signal]
| receiver[Signal] -> Signal
| initPop Signal 100.0"""


let constant_ratiometric = """directive simulator sundials
directive plot_settings { x_label = "Time (h)"; y_label = "Fluorescence (a.u.)" }
directive parameters [ 
	// Treatments
	C6=0.0; C12=0.0; Ara=0.0; tau=0.0;
	// Cell growth
	c0 = 0.002; 
	// Autofluorescence
	autoYFP=1e0, 	{ distribution=Uniform(1e-3,1e3) };
	autoCFP=1e0, 	{ distribution=Uniform(1e-3,1e3) };
	// FP
	dRFP=0.1,  { distribution=Uniform(1e-3,1e0) };
	dCFP=1e-2,  { distribution=Uniform(1e-3,1e0) };
	dYFP=1e-2,  { distribution=Uniform(1e-3,1e0) };
	// Double receiver
	KR6=1e-2,   { distribution=Uniform(1e-8,1e0) };
	KS6=1e-4,   { distribution=Uniform(1e-8,1e0) };
	KR12=1e-3,  { distribution=Uniform(1e-8,1e0) };
	KS12=1e-2,  { distribution=Uniform(1e-8,1e0) };
	nR=0.797,  	{ interval=Real; distribution=Uniform(0.5,2.0) };
	nS=0.797,  	{ interval=Real; distribution=Uniform(0.5,2.0) };
	aRS100=1.0, { distribution=Uniform(1e0,1e2) };
	aR33=1.0, 	{ distribution=Uniform(1e0,1e2) };
	aS32=1.0, 	{ distribution=Uniform(1e0,1e2) };
	aS175=1.0, 	{ distribution=Uniform(1e0,1e2) };
	dR=0.1,    	{ distribution=Uniform(1e-2,1e1) };
	//dS=0.1,   { distribution=Uniform(1e-2,1e2) };
	e76=1e-2,  	{ distribution=Uniform(1e-4,1.0) };
	KGR_76=1e-2,{ distribution=Uniform(1e-4,1e0) };
	KGS_76=1e-6,{ distribution=Uniform(1e-8,1e0) };
	e81=1e-2,   { distribution=Uniform(1e-4,1.0) };
	KGR_81=1e-6,{ distribution=Uniform(1e-8,1e0) };
	KGS_81=1e-2,{ distribution=Uniform(1e-4,1e0) };
	aCFP=1e3,   { distribution=Uniform(1e0,1e5) };
	aYFP=1e3, 	{ distribution=Uniform(1e0,1e5) };
	dCFP=1e-2,	{ distribution=Uniform(1e-3,1e0) };
	dYFP=1e-2,	{ distribution=Uniform(1e-3,1e0) };
	// Relay P81-LuxI
	kC6=1e0,  { distribution=Uniform(1e0,1e6) };
	Klux=1.0, { distribution=Uniform(1e0,1e6) };
	dluxI=0.1,{ distribution=Uniform(1e-3,1e1) };
	// Relay P76-LasI
	kC12=1e0, { distribution=Uniform(1e0,1e6) };
	Klas=1.0, { distribution=Uniform(1e0,1e6) };
	dlasI=0.1,{ distribution=Uniform(1e-3,1e1) };
	// PBad
	KAra=1.0, { distribution=Uniform(1e-2,1e2) };
	nA=1.0,   { interval=Real; distribution=Uniform(0.5,3.0) };
	eA=0.1,   { interval=Real; distribution=Uniform(0.0,0.5) };
	// AiiA
	dA6=1e-1,  { distribution=Uniform(1e-3,1e1) };
	dA12=1e-1, { distribution=Uniform(1e-3,1e1) };
	daiiA=0.1, { distribution=Uniform(1e-3,1e1) };
]
directive inference { burnin=200; samples=200; thin=20; noise_model = proportional }
directive simulation {multicore=True}
directive rates [
	growth =  [grow]*r*(1 - [x] / K);
	capacity = rc;
	boundLuxR = [luxR]^2 * ((KR6*[c6])^nR + (KR12*[c12])^nR) / ((1.0 + KR6*[c6] + KR12*[c12])^nR);
	boundLasR = [lasR]^2 * ((KS6*[c6])^nS + (KS12*[c12])^nS) / ((1.0 + KS6*[c6] + KS12*[c12])^nS);
	P76 = (e76 + KGR_76*[boundLuxR] + KGS_76*[boundLasR]) / (1.0 + KGR_76*[boundLuxR] + KGS_76*[boundLasR]);
	P81 = (e81 + KGR_81*[boundLuxR] + KGS_81*[boundLasR]) / (1.0 + KGR_81*[boundLuxR] + KGS_81*[boundLasR]);
	PBad = (Ara^nA+eA*KAra^nA)/(Ara^nA+KAra^nA);
	one = 1.0;
]

module CFP(P,a,growth,capacity) = {
    ->[[capacity]*a*[P]] cfp | 
    cfp ->{dCFP} | 
    cfp ->[[growth]*[cfp]] 
} 
module YFP(P,a,growth,capacity) = {
    ->[[capacity]*a*[P]] yfp | 
    yfp ->{dYFP} | 
    yfp ->[[growth]*[yfp]] 
} 
module LuxR(aR,growth,capacity) = {
	->[[capacity]*aR] luxR |
	luxR ->{dR} |
	luxR ->[[growth]*[luxR]]
}
module LasR(aS,growth,capacity) = {
    ->[[capacity]*aS] lasR | 
    lasR ->{dR} | 
    lasR ->[[growth]*[lasR]] 
} 
module LuxI(P,growth,capacity) = {
    ->[[capacity]*[P]] luxI | 
    luxI ->{dluxI} | 
    luxI ->[[growth]*[luxI]] |
    ->[kC6*[capacity]*[x]*[luxI]/(1+[luxI]/Klux)] c6 
} 
module LasI(P,growth,capacity) = {
    ->[[capacity]*[P]] lasI | 
    lasI ->{dlasI} | 
    lasI ->[[growth]*[lasI]] |
    ->[kC12*[capacity]*[x]*[lasI]/(1+[lasI]/Klas)] c12 
} 
module AiiA(P,aI,growth,capacity) = {
	->[[capacity]*aI*[P]] aiiA |
	aiiA ->{daiiA} |
	aiiA ->[[growth]*[aiiA]] |
	c6 -> [[x]*dA6*[c6]*[aiiA]] |
	c12 -> [[x]*dA12*[c12]*[aiiA]]
}
module cells(growth,tlag) = { 
	init x c0 | init grow 1 @ tlag |
	init c6 C6 @ tau | init c12 C12 @ tau |
	->[[growth]*[x]] x
}
module autofluorescence(growth,capacity) = {	
	->[[capacity]*autoYFP] f530 |
	f530 ->[[growth]*[f530]] |
	->[[capacity]*autoCFP] f480 |
	f480 ->[[growth]*[f480]]
}
module doublereceiver(aR,aS,growth,capacity) = {
  LuxR(aR,growth,capacity) | 
  LasR(aS,growth,capacity) | 
  YFP(P81,aYFP,growth,capacity) | 
  CFP(P76,aCFP,growth,capacity)
}

// Models of each GEC device
device prpr() = { YFP(one,aYFP,growth,capacity) | CFP(one,aCFP,growth,capacity) }
device drPcat() = { doublereceiver(1.0,1.0,growth,capacity) }
device drRS100S32() = { doublereceiver(aRS100,aS32,growth,capacity) }
device drR33S32() = { doublereceiver(aR33,aS32,growth,capacity) }
device drR33S175() = { doublereceiver(aR33,aS175,growth,capacity) }
device relayP76LasI() = { LasI(P76,growth,capacity) }
device relayP81LuxI() = { LuxI(P81,growth,capacity) }
device pBadYFP() = { YFP(PBad,aYFP,growth,capacity) }
device pBadAiiA() = { AiiA(PBad,1.0,growth,capacity) }
 
// Systems for growth and control that will be reused heavily
system growth = {
	directive simulation { final=36.0; points=250; plots=[[x]+x0]; multicore=True; sweeps=[sweep_R33S175_PBadaiia_dataset7] }
	directive plot_settings { y_label = "OD" }
	directive parameters [ 
		r = 1, { interval=Real; distribution=Uniform(0.1,10); variation=Multiple }; 
		K = 2, { interval=Real; distribution=Uniform(0.1,5); variation=Multiple }; 
		tlag = 1, { interval=Real; distribution=Uniform(0,10); variation=Multiple }; 
		x0=0.1,{ interval=Real; distribution=Uniform(0.0,0.2) };
	]
	directive rates [growth =  [grow]*r*(1 - [x] / K)]
	directive sweeps [
		sweep_R33S175_PBadaiia_dataset7 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,5); (0,0,25000,0,2.5); (0,0,25000,0,1.25); (0,0,25000,0,0.625); (0,0,25000,0,0.3125); (0,0,25000,0,0); (0,0,0,25000,5); (0,0,0,25000,2.5); (0,0,0,25000,1.25); (0,0,0,25000,0.625); (0,0,0,25000,0.3125); (0,0,0,25000,0); (0,0,5000,0,5); (0,0,5000,0,2.5); (0,0,5000,0,1.25); (0,0,5000,0,0.625); (0,0,5000,0,0.3125); (0,0,5000,0,0); (0,0,0,5000,5); (0,0,0,5000,2.5); (0,0,0,5000,1.25); (0,0,0,5000,0.625); (0,0,0,5000,0.3125); (0,0,0,5000,0); (0,0,1000,0,5); (0,0,1000,0,2.5); (0,0,1000,0,1.25); (0,0,1000,0,0.625); (0,0,1000,0,0.3125); (0,0,1000,0,0); (0,0,0,1000,5); (0,0,0,1000,2.5); (0,0,0,1000,1.25); (0,0,0,1000,0.625); (0,0,0,1000,0.3125); (0,0,0,1000,0); (0,0,200,0,5); (0,0,200,0,2.5); (0,0,200,0,1.25); (0,0,200,0,0.625); (0,0,200,0,0.3125); (0,0,200,0,0); (0,0,0,200,5); (0,0,0,200,2.5); (0,0,0,200,1.25); (0,0,0,200,0.625); (0,0,0,200,0.3125); (0,0,0,200,0); (0,0,40,0,5); (0,0,40,0,2.5); (0,0,40,0,1.25); (0,0,40,0,0.625); (0,0,40,0,0.3125); (0,0,40,0,0); (0,0,0,40,5); (0,0,0,40,2.5); (0,0,0,40,1.25); (0,0,0,40,0.625); (0,0,0,40,0.3125); (0,0,0,40,0); (0,0,8,0,5); (0,0,8,0,2.5); (0,0,8,0,1.25); (0,0,8,0,0.625); (0,0,8,0,0.3125); (0,0,8,0,0); (0,0,0,8,5); (0,0,0,8,2.5); (0,0,0,8,1.25); (0,0,0,8,0.625); (0,0,0,8,0.3125); (0,0,0,8,0); (0,0,1.6,0,5); (0,0,1.6,0,2.5); (0,0,1.6,0,1.25); (0,0,1.6,0,0.625); (0,0,1.6,0,0.3125); (0,0,1.6,0,0); (0,0,0,1.6,5); (0,0,0,1.6,2.5); (0,0,0,1.6,1.25); (0,0,0,1.6,0.625); (0,0,0,1.6,0.3125); (0,0,0,1.6,0); (0,0,0,0,5); (0,0,0,0,2.5); (0,0,0,0,1.25); (0,0,0,0,0.625); (0,0,0,0,0.3125); (0,0,0,0,0); (0,0,0,0,5); (0,0,0,0,2.5); (0,0,0,0,1.25); (0,0,0,0,0.625); (0,0,0,0,0.3125); (0,0,0,0,0)]];
	]
	directive data [R33S175_PBadaiia_OD_proc_PBadAiia_Ara_C6C12]
	directive crn { cells(growth,tlag) }	
}
system control = {
	directive simulation { final=36.0; points=250; plots=[[x]*[fp]+f0]; plotcolours=["#FF0000"]; multicore=True; sweeps=[sweep_R33S175_PBadaiia_dataset7] }
	directive plot_settings { y_label = "RFP fluorescence (a.u.)" }
	directive parameters [ 
		r = 1, { interval=Real; distribution=Uniform(0.1,10); variation=Multiple }; 
		K = 2, { interval=Real; distribution=Uniform(0.1,5); variation=Multiple }; 
		tlag = 1, { interval=Real; distribution=Uniform(0,10); variation=Multiple }; 
		rc=1e2,   { distribution=Uniform(1e0,1e5); variation=Multiple };
		f0=100.0,{ interval=Real; distribution=Uniform(0.0,10000.0) };
	]
	directive rates [growth =  [grow]*r*(1 - [x] / K);capacity = rc]
	directive sweeps [
		sweep_R33S175_PBadaiia_dataset7 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,5); (0,0,25000,0,2.5); (0,0,25000,0,1.25); (0,0,25000,0,0.625); (0,0,25000,0,0.3125); (0,0,25000,0,0); (0,0,0,25000,5); (0,0,0,25000,2.5); (0,0,0,25000,1.25); (0,0,0,25000,0.625); (0,0,0,25000,0.3125); (0,0,0,25000,0); (0,0,5000,0,5); (0,0,5000,0,2.5); (0,0,5000,0,1.25); (0,0,5000,0,0.625); (0,0,5000,0,0.3125); (0,0,5000,0,0); (0,0,0,5000,5); (0,0,0,5000,2.5); (0,0,0,5000,1.25); (0,0,0,5000,0.625); (0,0,0,5000,0.3125); (0,0,0,5000,0); (0,0,1000,0,5); (0,0,1000,0,2.5); (0,0,1000,0,1.25); (0,0,1000,0,0.625); (0,0,1000,0,0.3125); (0,0,1000,0,0); (0,0,0,1000,5); (0,0,0,1000,2.5); (0,0,0,1000,1.25); (0,0,0,1000,0.625); (0,0,0,1000,0.3125); (0,0,0,1000,0); (0,0,200,0,5); (0,0,200,0,2.5); (0,0,200,0,1.25); (0,0,200,0,0.625); (0,0,200,0,0.3125); (0,0,200,0,0); (0,0,0,200,5); (0,0,0,200,2.5); (0,0,0,200,1.25); (0,0,0,200,0.625); (0,0,0,200,0.3125); (0,0,0,200,0); (0,0,40,0,5); (0,0,40,0,2.5); (0,0,40,0,1.25); (0,0,40,0,0.625); (0,0,40,0,0.3125); (0,0,40,0,0); (0,0,0,40,5); (0,0,0,40,2.5); (0,0,0,40,1.25); (0,0,0,40,0.625); (0,0,0,40,0.3125); (0,0,0,40,0); (0,0,8,0,5); (0,0,8,0,2.5); (0,0,8,0,1.25); (0,0,8,0,0.625); (0,0,8,0,0.3125); (0,0,8,0,0); (0,0,0,8,5); (0,0,0,8,2.5); (0,0,0,8,1.25); (0,0,0,8,0.625); (0,0,0,8,0.3125); (0,0,0,8,0); (0,0,1.6,0,5); (0,0,1.6,0,2.5); (0,0,1.6,0,1.25); (0,0,1.6,0,0.625); (0,0,1.6,0,0.3125); (0,0,1.6,0,0); (0,0,0,1.6,5); (0,0,0,1.6,2.5); (0,0,0,1.6,1.25); (0,0,0,1.6,0.625); (0,0,0,1.6,0.3125); (0,0,0,1.6,0); (0,0,0,0,5); (0,0,0,0,2.5); (0,0,0,0,1.25); (0,0,0,0,0.625); (0,0,0,0,0.3125); (0,0,0,0,0); (0,0,0,0,5); (0,0,0,0,2.5); (0,0,0,0,1.25); (0,0,0,0,0.625); (0,0,0,0,0.3125); (0,0,0,0,0)]];
	]
	directive data [R33S175_PBadaiia_mRFP1_proc_PBadAiia_Ara_C6C12]
	directive crn {
		cells(growth,tlag) 
		| fp ->[[growth]*[fp]] 		// Dilution
		| ->[[capacity]] fp  		// Transcription/translation		
		| fp ->{dRFP}					// Degradation
	}
}

system target = {
	directive simulation { final=36.0; points=250; plots=[[x]*([yfp]+[f530])+yb0; [x]*([cfp]+[f480])+cb0]; plotcolours=["#FFDF00"; "#ADD8E6"] }
	directive parameters [ 
		r = 1, { interval=Real; distribution=Uniform(0.1,10); variation=Multiple }; 
		K = 2, { interval=Real; distribution=Uniform(0.1,5); variation=Multiple }; 
		tlag = 1, { interval=Real; distribution=Uniform(0,10); variation=Multiple }; 
		rc=1e2,   { distribution=Uniform(1e0,1e5); variation=Multiple };
		yb0=1e3,  { interval=Real; distribution=Uniform(0.0,5e3) };
		cb0=1e3,  { interval=Real; distribution=Uniform(0.0,1e4) };
	]		
	directive rates [growth =  [grow]*r*(1 - [x] / K);capacity = rc]
	directive crn { cells(growth,tlag) | autofluorescence(growth,capacity) }	
}

system auto = { target with 
	directive simulation { final=36.0; points=250; plots=[[x]*[f530]+yb0; [x]*[f480]+cb0]; plotcolours=["#FFDF00"; "#ADD8E6"]; multicore=True; sweeps=[sweep_EC10G_dataset0] } 
	directive sweeps [
		sweep_EC10G_dataset0 = [(EtOH,chlor,C6,C12,Ara) = [(1700000000,0,0,0,0); (170000000,0,0,0,0); (17000000,0,0,0,0); (1700000,0,0,0,0); (170000,0,0,0,0); (17000,0,0,0,0); (1700,0,0,0,0); (170,0,0,0,0); (17,0,0,0,0); (1.7,0,0,0,0); (0.17,0,0,0,0); (0,0,0,0,0); (1700000000,0,0,0,0); (170000000,0,0,0,0); (17000000,0,0,0,0); (1700000,0,0,0,0); (170000,0,0,0,0); (17000,0,0,0,0); (1700,0,0,0,0); (170,0,0,0,0); (17,0,0,0,0); (1.7,0,0,0,0); (0.17,0,0,0,0); (0,0,0,0,0); (1700000000,0,0,0,0); (170000000,0,0,0,0); (17000000,0,0,0,0); (1700000,0,0,0,0); (170000,0,0,0,0); (17000,0,0,0,0); (1700,0,0,0,0); (170,0,0,0,0); (17,0,0,0,0); (1.7,0,0,0,0); (0.17,0,0,0,0); (0,0,0,0,0); (1700000000,0,0,0,0); (170000000,0,0,0,0); (17000000,0,0,0,0); (1700000,0,0,0,0); (170000,0,0,0,0); (17000,0,0,0,0); (1700,0,0,0,0); (170,0,0,0,0); (17,0,0,0,0); (1.7,0,0,0,0); (0.17,0,0,0,0); (0,0,0,0,0)]];
	]
	directive data [EC10G_EYFP_ECFP_proc_EC10G_EtOH]
}

system prpr = { target with
	directive simulation {multicore=True; sweeps=[sweep_PLPL_dataset1]}
	directive parameters [ 
		r = 1, { interval=Real; distribution=Uniform(0.1,10); variation=Multiple }; 
		K = 2, { interval=Real; distribution=Uniform(0.1,5); variation=Multiple }; 
		tlag = 1, { interval=Real; distribution=Uniform(0,10); variation=Multiple }; 
		rc=1e2,   { distribution=Uniform(1e0,1e5); variation=Multiple };
		aCFP=1e3,   { distribution=Uniform(1e0,1e5);  variation=Random };
		aYFP=1e3, 	{ distribution=Uniform(1e0,1e5);  variation=Random };
		yb0=1e3,  { interval=Real; distribution=Uniform(0.0,5e3) };
		cb0=1e3,  { interval=Real; distribution=Uniform(0.0,1e4) };	
	]
	directive sweeps [
		sweep_PLPL_dataset1 = [(EtOH,chlor,C6,C12,Ara) = [(0,5,0,0,0); (0,5,0,0,0); (0,2.5,0,0,0); (0,2.5,0,0,0); (0,1.25,0,0,0); (0,1.25,0,0,0); (0,0.625,0,0,0); (0,0.625,0,0,0); (0,0.3125,0,0,0); (0,0.3125,0,0,0); (0,0,0,0,0); (0,0,0,0,0)]];
	]
	directive data [PLPL_EYFP_ECFP_proc_PLPL_Chlor]
	prpr:device
}

// DR (Pcat-Pcat)
system growth_PcatPcat = { growth with 
	directive simulation {multicore=True; sweeps=[sweep_Pcat_Y81C76_dataset4]}
	directive sweeps [
		sweep_Pcat_Y81C76_dataset4 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [Pcat_Y81C76_OD_proc141006]
}

system control_PcatPcat = { control with 
	directive simulation {multicore=True; sweeps=[sweep_Pcat_Y81C76_dataset4]}
	directive sweeps [
		sweep_Pcat_Y81C76_dataset4 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [Pcat_Y81C76_mRFP1_proc141006]
}

system dr_PcatPcat = { target with 
	directive simulation {multicore=True; sweeps=[sweep_Pcat_Y81C76_dataset4]}
	directive sweeps [
		sweep_Pcat_Y81C76_dataset4 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [Pcat_Y81C76_EYFP_ECFP_proc141006]
  drPcat:device 
}

// DR (RS100-S32)
system growth_RS100S32 = { growth with 
	directive simulation {multicore=True; sweeps=[sweep_RS100S32_Y81C76_dataset3]}
	directive sweeps [
		sweep_RS100S32_Y81C76_dataset3 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [RS100S32_Y81C76_OD_proc140916]
}

system control_RS100S32 = { control with 
	directive simulation {multicore=True; sweeps=[sweep_RS100S32_Y81C76_dataset3]}
	directive sweeps [
		sweep_RS100S32_Y81C76_dataset3 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [RS100S32_Y81C76_mRFP1_proc140916]
}

system dr_RS100S32 = { target with 
	directive simulation {multicore=True; sweeps=[sweep_RS100S32_Y81C76_dataset3]}
	directive sweeps [
		sweep_RS100S32_Y81C76_dataset3 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [RS100S32_Y81C76_EYFP_ECFP_proc140916]
	drRS100S32:device 
}

// DR (R33-S32)
system growth_R33S32 =   { growth with 
	directive simulation {multicore=True; sweeps=[sweep_R33S32_Y81C76_dataset3]}
	directive sweeps [
		sweep_R33S32_Y81C76_dataset3 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [R33S32_Y81C76_OD_proc140916]
}

system control_R33S32 = { control with 
	directive simulation {multicore=True; sweeps=[sweep_R33S32_Y81C76_dataset3]}
	directive sweeps [
		sweep_R33S32_Y81C76_dataset3 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [R33S32_Y81C76_mRFP1_proc140916]
}

system dr_R33S32 = { target with 
	directive simulation {multicore=True; sweeps=[sweep_R33S32_Y81C76_dataset3]}
	directive sweeps [
	    sweep_R33S32_Y81C76_dataset3 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [R33S32_Y81C76_EYFP_ECFP_proc140916]
	drR33S32:device 
}

// DR (R33-S175)
system growth_R33S175 =  { growth with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175_Y81C76_dataset2]}
	directive sweeps [
		sweep_R33S175_Y81C76_dataset2 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [R33S175_Y81C76_OD_proc141021]
}

system control_R33S175 =  { control with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175_Y81C76_dataset2]}
	directive sweeps [
		sweep_R33S175_Y81C76_dataset2 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [R33S175_Y81C76_mRFP1_proc141021]
}
system dr_R33S175 = { target with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175_Y81C76_dataset2]}
	directive sweeps [
		sweep_R33S175_Y81C76_dataset2 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.33333333333,0,0); (0,0,2777.77777777778,0,0); (0,0,925.925925925926,0,0); (0,0,308.641975308642,0,0); (0,0,102.880658436214,0,0); (0,0,34.2935528120713,0,0); (0,0,11.4311842706904,0,0); (0,0,3.81039475689681,0,0); (0,0,1.27013158563227,0,0); (0,0,0.423377195210757,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.33333333333,0); (0,0,0,2777.77777777778,0); (0,0,0,925.925925925926,0); (0,0,0,308.641975308642,0); (0,0,0,102.880658436214,0); (0,0,0,34.2935528120713,0); (0,0,0,11.4311842706904,0); (0,0,0,3.81039475689681,0); (0,0,0,1.27013158563227,0); (0,0,0,0.423377195210757,0); (0,0,0,0,0)]];
	]
	directive data [R33S175_Y81C76_EYFP_ECFP_proc141021]
	drR33S175:device 
}

// Timed additions circuit (for prediction)
system doublereceiverTimed = { dr_R33S175 with directive parameters [ sigma = 1.0 ] }

// Relays
system growth_P76LasI =  { growth with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175DR_P76LasI_dataset5]}
	directive sweeps [
		sweep_R33S175DR_P76LasI_dataset5 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0)]];
	]
	directive data [R33S175DR_P76LasI_OD_proc_Relays_RemovedOutlier]
}

system control_P76LasI =  { control with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175DR_P76LasI_dataset5]}
	directive sweeps [
		sweep_R33S175DR_P76LasI_dataset5 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0)]];
	]
	directive data [R33S175DR_P76LasI_mRFP1_proc_Relays_RemovedOutlier]
}
system relay_P76LasI = { dr_R33S175 with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175DR_P76LasI_dataset5]}
	directive sweeps [
		sweep_R33S175DR_P76LasI_dataset5 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0)]];
	]
	directive data [R33S175DR_P76LasI_EYFP_ECFP_proc_Relays_RemovedOutlier]
	relayP76LasI:device 
}

system growth_P81LuxI = { growth with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175DR_P81LuxI_dataset5]}
	directive sweeps [
		sweep_R33S175DR_P81LuxI_dataset5 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0)]];
	]
	directive data [R33S175DR_P81LuxI_OD_proc_Relays_RemovedOutlier]
}

system control_P81LuxI = { control with 
	directive simulation {multicore=True; sweeps=[sweep_R33S175DR_P81LuxI_dataset5]}
	directive sweeps [
		sweep_R33S175DR_P81LuxI_dataset5 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0)]];
	]
	directive data [R33S175DR_P81LuxI_mRFP1_proc_Relays_RemovedOutlier]
}
system relay_P81LuxI = { dr_R33S175 with
	directive simulation {multicore=True; sweeps=[sweep_R33S175DR_P81LuxI_dataset5]}
	directive sweeps [
		sweep_R33S175DR_P81LuxI_dataset5 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0); (0,0,25000,0,0); (0,0,8333.333333,0,0); (0,0,2777.777778,0,0); (0,0,925.925926,0,0); (0,0,308.641975,0,0); (0,0,102.880658,0,0); (0,0,34.293553,0,0); (0,0,11.431184,0,0); (0,0,3.810395,0,0); (0,0,1.270132,0,0); (0,0,0.423377,0,0); (0,0,0,0,0); (0,0,0,25000,0); (0,0,0,8333.333333,0); (0,0,0,2777.777778,0); (0,0,0,925.925926,0); (0,0,0,308.641975,0); (0,0,0,102.880658,0); (0,0,0,34.293553,0); (0,0,0,11.431184,0); (0,0,0,3.810395,0); (0,0,0,1.270132,0); (0,0,0,0.423377,0); (0,0,0,0,0)]];
	]
	directive data [R33S175DR_P81LuxI_EYFP_ECFP_proc_Relays_RemovedOutlier]
	relayP81LuxI:device 
}

// PBad
system pbad = { target with
	directive simulation { final=36.0; points=250; plots=[[x]*([yfp]+[f530])+yb0]; plotcolours=["#FFDF00"]; multicore=True; sweeps=[sweep_PBad_eYFP_dataset6] }
	directive parameters [
		r = 1, { interval=Real; distribution=Uniform(0.1,10); variation=Multiple }; 
		K = 2, { interval=Real; distribution=Uniform(0.1,5); variation=Multiple }; 
		tlag = 1, { interval=Real; distribution=Uniform(0,10); variation=Multiple }; 
		rc=1e2,   { distribution=Uniform(1e0,1e5); variation=Multiple };
		aYFP=1.0, { distribution=Uniform(1e0,1e5) };
		yb0=1e3,  { interval=Real; distribution=Uniform(0.0,5e3) };
	]
	directive sweeps [
		sweep_PBad_eYFP_dataset6 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,0,0,25); (0,0,0,0,0.78); (0,0,0,0,12.5); (0,0,0,0,0.39); (0,0,0,0,6.25); (0,0,0,0,0.195); (0,0,0,0,3.125); (0,0,0,0,0.0975); (0,0,0,0,1.5625); (0,0,0,0,0.04875); (0,0,0,0,0.78125); (0,0,0,0,0.024375)]];
	]
	directive data [PBad_eYFP_EYFP_proc_PBadYFP]	
	pBadYFP:device
}

// AiiA
system aiia = { dr_R33S175 with
	directive simulation {multicore=True; sweeps=[sweep_R33S175_PBadaiia_dataset7]}
	directive deterministic {reltolerance=1e-12; abstolerance=1e-10}
	directive sweeps [
		sweep_R33S175_PBadaiia_dataset7 = [(EtOH,chlor,C6,C12,Ara) = [(0,0,25000,0,5); (0,0,25000,0,2.5); (0,0,25000,0,1.25); (0,0,25000,0,0.625); (0,0,25000,0,0.3125); (0,0,25000,0,0); (0,0,0,25000,5); (0,0,0,25000,2.5); (0,0,0,25000,1.25); (0,0,0,25000,0.625); (0,0,0,25000,0.3125); (0,0,0,25000,0); (0,0,5000,0,5); (0,0,5000,0,2.5); (0,0,5000,0,1.25); (0,0,5000,0,0.625); (0,0,5000,0,0.3125); (0,0,5000,0,0); (0,0,0,5000,5); (0,0,0,5000,2.5); (0,0,0,5000,1.25); (0,0,0,5000,0.625); (0,0,0,5000,0.3125); (0,0,0,5000,0); (0,0,1000,0,5); (0,0,1000,0,2.5); (0,0,1000,0,1.25); (0,0,1000,0,0.625); (0,0,1000,0,0.3125); (0,0,1000,0,0); (0,0,0,1000,5); (0,0,0,1000,2.5); (0,0,0,1000,1.25); (0,0,0,1000,0.625); (0,0,0,1000,0.3125); (0,0,0,1000,0); (0,0,200,0,5); (0,0,200,0,2.5); (0,0,200,0,1.25); (0,0,200,0,0.625); (0,0,200,0,0.3125); (0,0,200,0,0); (0,0,0,200,5); (0,0,0,200,2.5); (0,0,0,200,1.25); (0,0,0,200,0.625); (0,0,0,200,0.3125); (0,0,0,200,0); (0,0,40,0,5); (0,0,40,0,2.5); (0,0,40,0,1.25); (0,0,40,0,0.625); (0,0,40,0,0.3125); (0,0,40,0,0); (0,0,0,40,5); (0,0,0,40,2.5); (0,0,0,40,1.25); (0,0,0,40,0.625); (0,0,0,40,0.3125); (0,0,0,40,0); (0,0,8,0,5); (0,0,8,0,2.5); (0,0,8,0,1.25); (0,0,8,0,0.625); (0,0,8,0,0.3125); (0,0,8,0,0); (0,0,0,8,5); (0,0,0,8,2.5); (0,0,0,8,1.25); (0,0,0,8,0.625); (0,0,0,8,0.3125); (0,0,0,8,0); (0,0,1.6,0,5); (0,0,1.6,0,2.5); (0,0,1.6,0,1.25); (0,0,1.6,0,0.625); (0,0,1.6,0,0.3125); (0,0,1.6,0,0); (0,0,0,1.6,5); (0,0,0,1.6,2.5); (0,0,0,1.6,1.25); (0,0,0,1.6,0.625); (0,0,0,1.6,0.3125); (0,0,0,1.6,0); (0,0,0,0,5); (0,0,0,0,2.5); (0,0,0,0,1.25); (0,0,0,0,0.625); (0,0,0,0,0.3125); (0,0,0,0,0); (0,0,0,0,5); (0,0,0,0,2.5); (0,0,0,0,1.25); (0,0,0,0,0.625); (0,0,0,0,0.3125); (0,0,0,0,0)]];
	]
	directive data [R33S175_PBadaiia_EYFP_ECFP_proc_PBadAiia_Ara_C6C12]
	| pBadAiiA:device
}

// Auto
node Auto_Growth { systems = [growth]; inference = {partial=true} }
node Auto_Control { systems = [control]; inference = {partial=true} }
node Auto_Target { systems = [auto] }
edge Auto_Growth.growth ->[r=Fixed;K=Fixed;tlag=Fixed] Auto_Control.control
edge Auto_Control.control ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] Auto_Target.auto

// PRPR
node PRPR_Growth { systems = [growth]; inference = {partial=true} }
node PRPR_Control { systems = [control]; inference = {partial=true} }
node PRPR_Target { systems = [prpr] }
edge PRPR_Growth.growth ->[r=Fixed;K=Fixed;tlag=Fixed] PRPR_Control.control
edge PRPR_Control.control ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] PRPR_Target.prpr
edge Auto_Control ->[dRFP] PRPR_Control
edge Auto_Target ->[autoYFP;autoCFP] PRPR_Target

// DR
node DR_Growth { systems = [growth_PcatPcat; growth_RS100S32; growth_R33S32; growth_R33S175]; inference = {partial=true} }
node DR_Control { systems = [control_PcatPcat; control_RS100S32; control_R33S32; control_R33S175]; inference = {partial=true} }
node DR_Target { systems = [dr_PcatPcat; dr_RS100S32; dr_R33S32; dr_R33S175] }
edge DR_Growth.growth_PcatPcat ->[r=Fixed;K=Fixed;tlag=Fixed] DR_Control.control_PcatPcat
edge DR_Growth.growth_RS100S32 ->[r=Fixed;K=Fixed;tlag=Fixed] DR_Control.control_RS100S32
edge DR_Growth.growth_R33S32 ->[r=Fixed;K=Fixed;tlag=Fixed] DR_Control.control_R33S32
edge DR_Growth.growth_R33S175 ->[r=Fixed;K=Fixed;tlag=Fixed] DR_Control.control_R33S175
edge DR_Control.control_PcatPcat ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] DR_Target.dr_PcatPcat
edge DR_Control.control_RS100S32 ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] DR_Target.dr_RS100S32
edge DR_Control.control_R33S32 ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] DR_Target.dr_R33S32
edge DR_Control.control_R33S175 ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] DR_Target.dr_R33S175
edge PRPR_Control ->[dRFP] DR_Control
edge PRPR_Target ->[autoYFP; autoCFP; dYFP; dCFP] DR_Target

// Relays
node Relays_Growth { systems = [growth_P76LasI; growth_P81LuxI]; inference = {partial=true} }
node Relays_Control { systems = [control_P76LasI; control_P81LuxI]; inference = {partial=true} }
node Relays_Target { systems = [relay_P76LasI; relay_P81LuxI] }
edge Relays_Growth.growth_P76LasI ->[r=Fixed;K=Fixed;tlag=Fixed] Relays_Control.control_P76LasI
edge Relays_Growth.growth_P81LuxI ->[r=Fixed;K=Fixed;tlag=Fixed] Relays_Control.control_P81LuxI
edge Relays_Control.control_P76LasI ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] Relays_Target.relay_P76LasI
edge Relays_Control.control_P81LuxI ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] Relays_Target.relay_P81LuxI
edge DR_Control ->[dRFP] Relays_Control
edge DR_Target ->[
    autoYFP;autoCFP;dYFP;dCFP;
    aR33;aS175;aYFP;aCFP;e76;e81;KGR_76;KGS_76;KGR_81;KGS_81;KR6;KS6;KR12;KS12;nR;nS;dR;
] Relays_Target

// PBad
node PBad_Growth { systems = [growth]; inference = {partial=true} }
node PBad_Control { systems = [control]; inference = {partial=true} }
node PBad_Target { systems = [pbad] }
edge PBad_Growth.growth ->[r=Fixed;K=Fixed;tlag=Fixed] PBad_Control.control
edge PBad_Control.control ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] PBad_Target.pbad
edge PRPR_Control ->[dRFP] PBad_Control
edge PRPR_Target ->[autoYFP;dYFP] PBad_Target

// AiiA
node AiiA_Growth { systems = [growth]; inference = {partial=true} }
node AiiA_Control { systems = [control]; inference = {partial=true} }
node AiiA_Target { systems = [aiia] }
edge AiiA_Growth.growth ->[r=Fixed;K=Fixed;tlag=Fixed] AiiA_Control.control
edge AiiA_Control.control ->[r=Fixed;K=Fixed;tlag=Fixed;rc=Fixed] AiiA_Target.aiia
edge DR_Control ->[dRFP] AiiA_Control
edge DR_Target ->[
	autoYFP;autoCFP;dYFP;dCFP;
	aR33;aS175;aYFP;aCFP;e76;e81;KGR_76;KGS_76;KGR_81;KGS_81;KR6;KS6;KR12;KS12;nR;nS;dR;
] AiiA_Target
edge PBad_Target ->[KAra; nA; eA] AiiA_Target"""

[<Fact(DisplayName="GEC - Program Parser - Basic")>]
let ``progBasicTest``() = 
     
    let prog = basic_program
    Debug.WriteLine(prog)
    let testprog (s:string) = Parser.from_string Program.parse s
    match testprog prog with 
    | ClassicGec gecprog ->
      let crn_settings = Crn_settings.defaults.from_default_directive_list gecprog.settings.directives
      Assert.Equal(crn_settings.simulation.final,100000.0)
      Assert.Equal(crn_settings.simulation.points,1000)
      match gecprog.prog with
      | Ast.Seq(p1,brick) -> 
          match brick with
          | Ast.Brick(Ast.WildCardVal,str,props) -> Assert.Equal(str,"ter")
          | _ -> failwith "Unexpected Type found"
      | _ -> 
          Debug.WriteLine("Error. Seq expected")
          Assert.Equal(true,false)
      Debug.WriteLine("End of Test")
    | _ -> failwith "Unexpected Logic GEC program."

[<Fact(DisplayName="GEC - Program Parser - Repressilator")>]
let ``progRepressilatorTest``() = 
    let progRepressilator = repressilator
    
    Debug.WriteLine(progRepressilator)

    let testprog (s:string) = Parser.from_string Program.parse s
    let gecprog = testprog progRepressilator

    Debug.WriteLine("End of Test")

[<Fact(DisplayName="GEC - Program Parser - RepressilatorSimilar")>]
let ``progRepressilatorSimilarTest``()=
    let progRepressilatorSimilar = repressilator_similar
    

    Debug.WriteLine(progRepressilatorSimilar)

    let testprog (s:string) = Parser.from_string Program.parse s
    let gecprog = testprog progRepressilatorSimilar

    Debug.WriteLine("End of Test")

[<Fact(DisplayName="GEC - Program Parser - Repressilator Modules")>]
let ``progRepressilatorModulesTest``()=
    
    let progRepressilatorModules = repressilator_modules    
    Debug.WriteLine(progRepressilatorModules)
    let testprog (s:string) = Parser.from_string Program.parse s
    let gecprog = testprog progRepressilatorModules
    Debug.WriteLine("End of Test")

[<Fact(DisplayName="GEC - Program Parser - Repressilator Modules Similar")>]
let ``progRepressilatorModuleSimilarTest``()=
    
    let progRepressilatorModuleSimilar = repressilator_modules_similar    
    Debug.WriteLine(progRepressilatorModuleSimilar)
    let testprog (s:string) = Parser.from_string Program.parse s
    let gecprog = testprog progRepressilatorModuleSimilar
    Debug.WriteLine("End of Test")

[<Fact(DisplayName="GEC - Program Parser - Receiver Device")>]
let ``progReceiverDeviceTest``()=
    
    let progReceiverDevice = reciever_device    
    Debug.WriteLine(progReceiverDevice)
    
    let testprog (s:string) = Parser.from_string Program.parse s
    let gecprog = testprog progReceiverDevice
    
    Debug.WriteLine("End of Test")



[<Fact(DisplayName="GEC - Program Parser - Predator Prey")>]
let ``progPredatorPreyTest``()=
    
    let progPredatorPrey = predator_prey
    
    Debug.WriteLine(progPredatorPrey)

    let testprog (s:string) = Parser.from_string Program.parse s
    let gecprog = testprog progPredatorPrey

    Debug.WriteLine("End of Test")

[<Fact(DisplayName="GEC - Program Parser - CRN Directive with Program")>]
let crnDirectiveProgTest() = 
    let progWithCrn = basic_crn
    let testprog (s:string) = Parser.from_string Program.parse s
    match testprog progWithCrn with 
    | ClassicGec gecprog ->
      let crn_settings = Crn_settings.defaults.from_default_directive_list gecprog.settings.directives
      Assert.Equal(crn_settings.simulation.final,100000.0)
      Assert.False(gecprog.settings.overrideCrn)
      let (moduledefs,instructions) = gecprog.settings.crn
      Assert.Equal(moduledefs.Length,1)
      Assert.Equal(instructions.Length,2)
    | _ -> failwith "Unexpected Logic GEC program."



[<Fact(DisplayName="GEC - Program Parser - Sandbox")>]
let ``progSandboxTest``()=

    let get_obj s = Parser.from_string Program.pInnerParallelContent s
    
    let str0 = "4 * x > 5"
    let str1 = "b5:rbs;b1:ter"
    let str2 = "a > 6"
    let str3 = "m(a::g,6+C)"
    let obj = get_obj str0
    let obj = get_obj str1
    let obj = get_obj str2
    let obj = get_obj str3 

    let str = "cell[signal] -> signal"
    let reac = get_obj str
    
    let str4 = "a + b + c > t + 6 - g" 
    let reac4 = get_obj str4
    let str5 = ""
    let reac5 = get_obj str5
    
    let nilprog = Parser.from_string Program.parse_new_outer ""


    ()
   
[<Fact(DisplayName="GEC - Program Parser - Band Detector")>]
let ``progBandDetectorTest``()=
    
    let progBandDetector = band_detector
    
    Debug.WriteLine(progBandDetector)
    let testprog (s:string) = Parser.from_string Program.parse s
    let gecprog = testprog progBandDetector
    Debug.WriteLine("End of Test")

